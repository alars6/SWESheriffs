Information about object: e_homeless_bod_obj

Sprite: player_stand_mask_sprite
Solid: false
Visible: true
Depth: -1
Persistent: false
Parent: <no parent>
Mask: <same as sprite>

Create Event:
execute code:

exit;
instance_destroy();
//////////////////////////////////////////
//Initiate the enemy as a 'blank' sprite & its mask index (collision)
mask_index = player_stand_mask_sprite;
///Initiliaze body sprite vars
e_body_idle_left    = '';
e_body_idle_rite    = '';
e_body_walk_left    = '';
e_body_walk_rite    = '';
e_body_death_1_left = '';
e_body_death_1_rite = '';
e_body_death_2_left = '';
e_body_death_2_rite = '';
e_body_death_1_fin_l= '';
e_body_death_1_fin_r= '';
e_body_death_2_fin_l= '';
e_body_death_2_fin_r= '';
e_body_jump_left    = '';
e_body_jump_rite    = '';
e_body_face         = '';
////////////////////////////////
e_hp            = 1;
e_ready         = false;        //When this is true, the enemy is ready for player & collision interactions
e_move_speed    = 0;
e_weapon_num    = 0;
e_bod_sprite_which  = irandom_range(1,2);   //Which sprite 'pack' to use.
e_homeless_body_script(id,e_bod_sprite_which)




Alarm Event for alarm 0:
execute code:

/////////////////////////////////////////
//Testing for now
alarm[0] = 1;   //Loop every frame
if (e_weapon_num == 1)  //If enemy has rusty pan 
    {   //If player is on rite side of enemy
        if (x < enforcer_p1_body_obj.x)  && !(x = (enforcer_p1_body_obj.x - 20))
            {
                //if distance_to_object(obj_Player) < range
                //if (distance_to_point(x+enforcer_p1_body_obj - 30, y+enforcer_p1_body_obj))
                //if (!distance_to_point(enforcer_p1_body_obj.x,enforcer_p1_body_obj.y) < 30)
                //if !(place_meeting(x - 30 ,0,enforcer_p1_body_obj))
                //if(distance_to_point(x+enforcer_p1_body_obj, y+enforcer_p1_body_obj) < -30)
                if !(x = (enforcer_p1_body_obj.x - 20))
                    {hspeed = (e_move_speed * 1); e_body_face = 'rite';}
                //if!(distance_to_point(x+enforcer_p1_body_obj, y+enforcer_p1_body_obj) < -30)
                if (x = (enforcer_p1_body_obj.x - 20))
                    {hspeed = 0;exit;}
            }
        //If player is on left side of enemy
        if (x > enforcer_p1_body_obj.x) && !(x = (enforcer_p1_body_obj.x + 20))
            {
                //if !(place_meeting(x + 30 ,0,enforcer_p1_body_obj))
                //if(distance_to_point(x+enforcer_p1_body_obj, y+enforcer_p1_body_obj) < 30)
                if !(x = (enforcer_p1_body_obj.x + 20))
                    {hspeed = (e_move_speed * -1); e_body_face = 'left';}
                //if (place_meeting(x + 30 ,0,enforcer_p1_body_obj))
                if (x = (enforcer_p1_body_obj.x + 20))
                    {hspeed = 0;exit;}
            }
    }
////////////////////////////////////////////////////////////////////////////////////////////////
if (e_weapon_num == 2)  //If enemy has rusty revolver
    {
         //If player is on left side of enemy
        if (x < enforcer_p1_body_obj.x) && !(x = (enforcer_p1_body_obj.x - 50))
            {
                //if distance_to_object(obj_Player) < range
                //if (distance_to_point(x+enforcer_p1_body_obj - 30, y+enforcer_p1_body_obj))
               //if !(place_meeting(x - 60 ,0,enforcer_p1_body_obj))
               if !(x = (enforcer_p1_body_obj.x - 50))
                    {hspeed = (e_move_speed * 1); e_body_face = 'rite';}
               //if (place_meeting(x - 60 ,0,enforcer_p1_body_obj))
               if (x = (enforcer_p1_body_obj.x - 50))
                    {hspeed = 0;exit;}
            }
        //If player is on rite side of enemy
        if (x > enforcer_p1_body_obj.x)  && !(x = (enforcer_p1_body_obj.x + 50))   //If player is on rite side of enemy
            {
                //if !(place_meeting(x + 60 ,0,enforcer_p1_body_obj))
                if !(x = (enforcer_p1_body_obj.x + 50))
                    {hspeed = (e_move_speed * -1); e_body_face = 'left';}
                //if (place_meeting(x + 60 ,0,enforcer_p1_body_obj))
                if (x = (enforcer_p1_body_obj.x + 50))
                    {hspeed = 0;exit;}
            }
    }
//////////////////////////////////////////////////////////////////////////////////////////////////



 Step Event:
execute code:

///THIS IS MEANT FOR GRAVITY
if (place_free(x+0,y+1))
    {gravity_direction = 270;gravity = 0.5;}
else
    {gravity_direction = 270; gravity = 0;}
//////   

//if (hspeed > 0)

//if (hspeed < 0)




Collision Event with object enforce_solid_object_parent:
execute code:

move_contact_solid(direction,12);
    vspeed = 0;


Other Event: Outside Room:
execute code:

instance_destroy();

