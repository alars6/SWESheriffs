/////////////////////////////////////////////////////////
player_arm = argument0; //Recieves ID of specific player arm obj
player_num = argument1; //Knows WHICH player it is FOR.
/////////////////////////////////////////////////////////

if(player_num == 1)
    {   ////////////////////////////////////////////For rite side weapon//////////////////////////////////////////
        if(global.enforcer_p1_weapon_1 == true)
            {
                if (global.enforcer_p1_which_weapon_1 == 1)// For rusty revolver
                    {   ///Sprites first
                        player_arm.enforcer_p1_arm_1_hip_idle_left_sprite          = p_1_arm_rusty_revolver_hip_idle_left;
                        player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite          = p_1_arm_rusty_revolver_hip_idle_rite;
                        player_arm.enforcer_p1_arm_1_aim_idle_left_sprite          = p_1_arm_rusty_revolver_aim_idle_left;
                        player_arm.enforcer_p1_arm_1_aim_idle_rite_sprite          = p_1_arm_rusty_revolver_aim_idle_rite;
                        player_arm.enforcer_p1_arm_1_hip_fire_left_sprite          = p_1_arm_rusty_revolver_hip_fire_left;
                        player_arm.enforcer_p1_arm_1_hip_fire_rite_sprite          = p_1_arm_rusty_revolver_hip_fire_rite;
                        player_arm.enforcer_p1_arm_1_aim_fire_left_sprite          = p_1_arm_rusty_revolver_aim_fire_left;
                        player_arm.enforcer_p1_arm_1_aim_fire_rite_sprite          = p_1_arm_rusty_revolver_aim_fire_rite;
                        player_arm.enforcer_p1_arm_1_reload_left_sprite            = p_1_arm_rusty_revolver_reload_left;
                        player_arm.enforcer_p1_arm_1_reload_rite_sprite            = p_1_arm_rusty_revolver_reload_rite;
                        player_arm.enforcer_p1_arm_1_2nd_chance_left_sprite        = p_1_arm_rusty_revolver_2nd_chance_left;
                        player_arm.enforcer_p1_arm_1_2nd_chance_rite_sprite        = p_1_arm_rusty_revolver_2nd_chance_rite;
                        ////////////////////////////////////////////////////////////////
                        ////Sounds & speed Next
                        player_arm.enforcer_p1_arm_1_firing_speed                  = 0.25;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_1_reloading_speed               = 0.25;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_1_gunshot_1                     = rusty_revolver_gunshot_sfx_1;
                        player_arm.enforcer_p1_arm_1_gunshot_2                     = rusty_revolver_gunshot_sfx_2;
                        player_arm.enforcer_p1_arm_1_gunshot_3                     = rusty_revolver_gunshot_sfx_3;
                        player_arm.enforcer_p1_arm_1_operate_sound                 = rusty_revolver_cocking_sfx;  //Lever, Pump, manual cocking sfx
                        player_arm.enforcer_p1_arm_1_reload_sound                  = rusty_revolver_reload_sfx;
                        player_arm.enforcer_p1_arm_1_reload_fast_sound             = rusty_revolver_reload_sfx;
                        ////////////////////////////////////////////////////////////////
                        ////Particles & 'Origin' points
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle             = gunsmoke_puff_particle;
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle_x           = -15;
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle_y           = -6;
                        player_arm.enforcer_p1_arm_1_operate_sound_timing          = 02;
                        player_arm.enforcer_p1_arm_1_reload_particle_timing        = 04;
                        player_arm.enforcer_p1_arm_1_operate_particle              = '';           //Incase if it's magazine/clip fed
                        player_arm.enforcer_p1_arm_1_operate_particle_x            = 0;
                        player_arm.enforcer_p1_arm_1_operate_particle_y            = 0;
                        player_arm.enforcer_p1_arm_1_reload_particle               = small_brass_particle;
                        player_arm.enforcer_p1_arm_1_reload_particle_x             = -5;
                        player_arm.enforcer_p1_arm_1_reload_particle_y             = -3;
                        ////////////////////////////////////////////////////////////////
                        //////Global var setups
                        player_arm.enforcer_p1_weapon_1_ammo_using                = 1;
                        global.enforcer_p1_weapon_1_clip                           = 5;
                        player_arm.enforcer_p1_weapon_1_clip                       = global.enforcer_p1_weapon_1_clip;
                        if (global.enforcer_p1_face_side == 'left')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = enforcer_p1_arm_1_hip_idle_left_sprite;}
                        if (global.enforcer_p1_face_side == 'rite')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = enforcer_p1_arm_1_hip_idle_rite_sprite;}
                        player_arm.enforcer_p1_weapon_1_reload_amount = 1;
                        exit;    
                    }///////////////////END FOR RUSTY REVOLVER/////////////////////////////////////////
                    //STILL RIGHT SIDE!///////////////////////////////////////////////////////////
                if (global.enforcer_p1_which_weapon_1 == 2)// For rusty PISTOL
                    {///Sprites first
                        player_arm.enforcer_p1_arm_1_hip_idle_left_sprite          = p_1_arm_rusty_pistol_hip_idle_left;
                        player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite          = p_1_arm_rusty_pistol_hip_idle_rite;
                        player_arm.enforcer_p1_arm_1_aim_idle_left_sprite          = p_1_arm_rusty_pistol_aim_idle_left;
                        player_arm.enforcer_p1_arm_1_aim_idle_rite_sprite          = p_1_arm_rusty_pistol_aim_idle_rite;
                        player_arm.enforcer_p1_arm_1_hip_fire_left_sprite          = p_1_arm_rusty_pistol_hip_fire_left;
                        player_arm.enforcer_p1_arm_1_hip_fire_rite_sprite          = p_1_arm_rusty_pistol_hip_fire_rite;
                        player_arm.enforcer_p1_arm_1_aim_fire_left_sprite          = p_1_arm_rusty_pistol_aim_fire_left;
                        player_arm.enforcer_p1_arm_1_aim_fire_rite_sprite          = p_1_arm_rusty_pistol_aim_fire_rite;
                        player_arm.enforcer_p1_arm_1_reload_left_sprite            = p_1_arm_rusty_pistol_reload_left;
                        player_arm.enforcer_p1_arm_1_reload_rite_sprite            = p_1_arm_rusty_pistol_reload_rite;
                        player_arm.enforcer_p1_arm_1_2nd_chance_left_sprite        = p_1_arm_rusty_pistol_2nd_chance_left;
                        player_arm.enforcer_p1_arm_1_2nd_chance_rite_sprite        = p_1_arm_rusty_pistol_2nd_chance_rite;
                        ////////////////////////////////////////////////////////////////
                        ////Sounds & speed Next
                        player_arm.enforcer_p1_arm_1_firing_speed                  = 0.30;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_1_reloading_speed               = 0.40;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_1_gunshot_1                     = rusty_pistol_gunshot_sfx_1;
                        player_arm.enforcer_p1_arm_1_gunshot_2                     = rusty_pistol_gunshot_sfx_2;
                        player_arm.enforcer_p1_arm_1_gunshot_3                     = rusty_pistol_gunshot_sfx_3;
                        player_arm.enforcer_p1_arm_1_operate_sound                 = blank_audio;  //Lever, Pump, manual cocking sfx
                        player_arm.enforcer_p1_arm_1_reload_sound                  = rusty_pistol_reload_sfx;
                        player_arm.enforcer_p1_arm_1_reload_fast_sound             = rusty_pistol_reload_sfx;
                        ////////////////////////////////////////////////////////////////
                        ////Particles & 'Origin' points
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle             = gunsmoke_puff_particle;
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle_x           = -15;
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle_y           = -6;
                        player_arm.enforcer_p1_arm_1_operate_sound_timing          = 01;
                        player_arm.enforcer_p1_arm_1_reload_particle_timing        = 03;
                        player_arm.enforcer_p1_arm_1_operate_particle              = small_brass_particle;    //Incase if it's magazine/clip fed
                        player_arm.enforcer_p1_arm_1_operate_particle_x            = -8;
                        player_arm.enforcer_p1_arm_1_operate_particle_y            = -4;
                        player_arm.enforcer_p1_arm_1_reload_particle               = '';
                        player_arm.enforcer_p1_arm_1_reload_particle_x             = 0;
                        player_arm.enforcer_p1_arm_1_reload_particle_y             = 0;
                        ////////////////////////////////////////////////////////////////
                        //////Global var setups
                        player_arm.enforcer_p1_weapon_1_ammo_using                 = 2;
                        global.enforcer_p1_weapon_1_clip                           = 5;
                        player_arm.enforcer_p1_weapon_1_clip                       = global.enforcer_p1_weapon_1_clip;
                        if (global.enforcer_p1_face_side == 'left')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_left_sprite;}
                        if (global.enforcer_p1_face_side == 'rite')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite;}
                        player_arm.enforcer_p1_weapon_1_reload_amount = 1;
                        exit;
                    }
                    //STILL RIGHT SIDE!///////////////////////////////////////////////////////////
                if (global.enforcer_p1_which_weapon_1 == 3)// For rusty REPEATER
                    {
                        ///Sprites first
                        player_arm.enforcer_p1_arm_1_hip_idle_left_sprite          = p_1_arm_rusty_repeater_hip_idle_left;
                        player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite          = p_1_arm_rusty_repeater_hip_idle_rite;
                        player_arm.enforcer_p1_arm_1_aim_idle_left_sprite          = p_1_arm_rusty_repeater_aim_idle_left;
                        player_arm.enforcer_p1_arm_1_aim_idle_rite_sprite          = p_1_arm_rusty_repeater_aim_idle_rite;
                        player_arm.enforcer_p1_arm_1_hip_fire_left_sprite          = p_1_arm_rusty_repeater_hip_fire_left;
                        player_arm.enforcer_p1_arm_1_hip_fire_rite_sprite          = p_1_arm_rusty_repeater_hip_fire_rite;
                        player_arm.enforcer_p1_arm_1_aim_fire_left_sprite          = p_1_arm_rusty_repeater_aim_fire_left;
                        player_arm.enforcer_p1_arm_1_aim_fire_rite_sprite          = p_1_arm_rusty_repeater_aim_fire_rite;
                        player_arm.enforcer_p1_arm_1_reload_left_sprite            = p_1_arm_rusty_repeater_reload_left;
                        player_arm.enforcer_p1_arm_1_reload_rite_sprite            = p_1_arm_rusty_repeater_reload_rite;
                        player_arm.enforcer_p1_arm_1_2nd_chance_left_sprite        = p_1_arm_rusty_repeater_2nd_chance_left;
                        player_arm.enforcer_p1_arm_1_2nd_chance_rite_sprite        = p_1_arm_rusty_repeater_2nd_chance_rite;
                        ////////////////////////////////////////////////////////////////
                        ////Sounds & speed Next
                        player_arm.enforcer_p1_arm_1_firing_speed                  = 0.20;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_1_reloading_speed               = 0.20;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_1_gunshot_1                     = rusty_repeater_gunshot_sfx_1;
                        player_arm.enforcer_p1_arm_1_gunshot_2                     = rusty_repeater_gunshot_sfx_2;
                        player_arm.enforcer_p1_arm_1_gunshot_3                     = rusty_repeater_gunshot_sfx_3;
                        player_arm.enforcer_p1_arm_1_operate_sound                 = rusty_repeater_lever_sfx;  //Lever, Pump, manual cocking sfx
                        player_arm.enforcer_p1_arm_1_reload_sound                  = rusty_repeater_reload_sfx;
                        player_arm.enforcer_p1_arm_1_reload_fast_sound             = rusty_repeater_reload_sfx;
                        ////////////////////////////////////////////////////////////////
                        ////Particles & 'Origin' points
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle             = gunsmoke_puff_particle;
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle_x           = -20;
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle_y           = -6;
                        player_arm.enforcer_p1_arm_1_operate_sound_timing          = 03;
                        player_arm.enforcer_p1_arm_1_reload_particle_timing        = 03;
                        player_arm.enforcer_p1_arm_1_operate_particle              = small_brass_particle;    //Incase if it's magazine/clip fed
                        player_arm.enforcer_p1_arm_1_operate_particle_x            = -5;
                        player_arm.enforcer_p1_arm_1_operate_particle_y            = -3;
                        player_arm.enforcer_p1_arm_1_reload_particle               = '';
                        player_arm.enforcer_p1_arm_1_reload_particle_x             = 0;
                        player_arm.enforcer_p1_arm_1_reload_particle_y             = 0;
                        ////////////////////////////////////////////////////////////////
                        //////Global var setups
                        player_arm.enforcer_p1_weapon_1_ammo_using                 = 3;
                        global.enforcer_p1_weapon_1_clip                           = 4;
                        player_arm.enforcer_p1_weapon_1_clip                       = global.enforcer_p1_weapon_1_clip;
                        if (global.enforcer_p1_face_side == 'left')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_left_sprite;}
                        if (global.enforcer_p1_face_side == 'rite')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite;}
                        player_arm.enforcer_p1_weapon_1_reload_amount = 1;
                        exit;
                    }///////////////////END FOR RUSTY REPEATER/////////////////////////////////////////
                    //STILL RIGHT SIDE!///////////////////////////////////////////////////////////
                if (global.enforcer_p1_which_weapon_1 == 4)// For rusty RIFLE
                    {
                        ///Sprites first
                        player_arm.enforcer_p1_arm_1_hip_idle_left_sprite          = p_1_arm_rusty_rifle_hip_idle_left;
                        player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite          = p_1_arm_rusty_rifle_hip_idle_rite;
                        player_arm.enforcer_p1_arm_1_aim_idle_left_sprite          = p_1_arm_rusty_rifle_aim_idle_left;
                        player_arm.enforcer_p1_arm_1_aim_idle_rite_sprite          = p_1_arm_rusty_rifle_aim_idle_rite;
                        player_arm.enforcer_p1_arm_1_hip_fire_left_sprite          = p_1_arm_rusty_rifle_hip_fire_left;
                        player_arm.enforcer_p1_arm_1_hip_fire_rite_sprite          = p_1_arm_rusty_rifle_hip_fire_rite;
                        player_arm.enforcer_p1_arm_1_aim_fire_left_sprite          = p_1_arm_rusty_rifle_aim_fire_left;
                        player_arm.enforcer_p1_arm_1_aim_fire_rite_sprite          = p_1_arm_rusty_rifle_aim_fire_rite;
                        player_arm.enforcer_p1_arm_1_reload_left_sprite            = p_1_arm_rusty_rifle_reload_left;
                        player_arm.enforcer_p1_arm_1_reload_rite_sprite            = p_1_arm_rusty_rifle_reload_rite;
                        player_arm.enforcer_p1_arm_1_2nd_chance_left_sprite        = p_1_arm_rusty_rifle_2nd_chance_left;
                        player_arm.enforcer_p1_arm_1_2nd_chance_rite_sprite        = p_1_arm_rusty_rifle_2nd_chance_rite;
                        ////////////////////////////////////////////////////////////////
                        ////Sounds & speed Next
                        player_arm.enforcer_p1_arm_1_firing_speed                  = 0.20;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_1_reloading_speed               = 0.20;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_1_gunshot_1                     = rusty_rifle_gunshot_sfx_1;
                        player_arm.enforcer_p1_arm_1_gunshot_2                     = rusty_rifle_gunshot_sfx_2;
                        player_arm.enforcer_p1_arm_1_gunshot_3                     = rusty_rifle_gunshot_sfx_3;
                        player_arm.enforcer_p1_arm_1_operate_sound                 = blank_audio;  //Lever, Pump, manual cocking sfx
                        player_arm.enforcer_p1_arm_1_reload_sound                  = rusty_rifle_reload_sfx;
                        player_arm.enforcer_p1_arm_1_reload_fast_sound             = rusty_rifle_reload_fast_sfx;
                        ////////////////////////////////////////////////////////////////
                        ////Particles & 'Origin' points
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle             = gunsmoke_puff_particle;
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle_x           = -15;
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle_y           = -6;
                        player_arm.enforcer_p1_arm_1_operate_sound_timing          = 00;
                        player_arm.enforcer_p1_arm_1_reload_particle_timing        = 05;
                        player_arm.enforcer_p1_arm_1_operate_particle              = '';    //Incase if it's magazine/clip fed
                        player_arm.enforcer_p1_arm_1_operate_particle_x            = 0;
                        player_arm.enforcer_p1_arm_1_operate_particle_y            = 0;
                        player_arm.enforcer_p1_arm_1_reload_particle               = large_brass_particle;
                        player_arm.enforcer_p1_arm_1_reload_particle_x             = -3;
                        player_arm.enforcer_p1_arm_1_reload_particle_y             = -4;
                        ////////////////////////////////////////////////////////////////
                        //////Global var setups
                        player_arm.enforcer_p1_weapon_1_ammo_using                 = 4;
                        global.enforcer_p1_weapon_1_clip                           = 1;
                        player_arm.enforcer_p1_weapon_1_clip                       = global.enforcer_p1_weapon_1_clip;
                        if (global.enforcer_p1_face_side == 'left')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_left_sprite;}
                        if (global.enforcer_p1_face_side == 'rite')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite;}
                        player_arm.enforcer_p1_weapon_1_reload_amount = 1;
                        exit;
                    }///////////////////END FOR RUSTY RIFLE/////////////////////////////////////////
                    //STILL RIGHT SIDE!///////////////////////////////////////////////////////////
            if (global.enforcer_p1_which_weapon_1 == 5)// For rusty SHOTGUN
                    {
                        ///Sprites first
                        player_arm.enforcer_p1_arm_1_hip_idle_left_sprite          = p_1_arm_rusty_shotgun_hip_idle_left;
                        player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite          = p_1_arm_rusty_shotgun_hip_idle_rite;
                        player_arm.enforcer_p1_arm_1_aim_idle_left_sprite          = p_1_arm_rusty_shotgun_aim_idle_left;
                        player_arm.enforcer_p1_arm_1_aim_idle_rite_sprite          = p_1_arm_rusty_shotgun_aim_idle_rite;
                        player_arm.enforcer_p1_arm_1_hip_fire_left_sprite          = p_1_arm_rusty_shotgun_hip_fire_left;
                        player_arm.enforcer_p1_arm_1_hip_fire_rite_sprite          = p_1_arm_rusty_shotgun_hip_fire_rite;
                        player_arm.enforcer_p1_arm_1_aim_fire_left_sprite          = p_1_arm_rusty_shotgun_aim_fire_left;
                        player_arm.enforcer_p1_arm_1_aim_fire_rite_sprite          = p_1_arm_rusty_shotgun_aim_fire_rite;
                        player_arm.enforcer_p1_arm_1_reload_left_sprite            = p_1_arm_rusty_shotgun_reload_left;
                        player_arm.enforcer_p1_arm_1_reload_rite_sprite            = p_1_arm_rusty_shotgun_reload_rite;
                        player_arm.enforcer_p1_arm_1_2nd_chance_left_sprite        = p_1_arm_rusty_shotgun_2nd_chance_left;
                        player_arm.enforcer_p1_arm_1_2nd_chance_rite_sprite        = p_1_arm_rusty_shotgun_2nd_chance_rite;
                        ////////////////////////////////////////////////////////////////
                        ////Sounds & speed Next
                        player_arm.enforcer_p1_arm_1_firing_speed                  = 0.20;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_1_reloading_speed               = 0.20;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_1_gunshot_1                     = rusty_shotgun_gunshot_sfx_1;
                        player_arm.enforcer_p1_arm_1_gunshot_2                     = rusty_shotgun_gunshot_sfx_2;
                        player_arm.enforcer_p1_arm_1_gunshot_3                     = rusty_shotgun_gunshot_sfx_3;
                        player_arm.enforcer_p1_arm_1_operate_sound                 = blank_audio;  //Lever, Pump, manual cocking sfx
                        player_arm.enforcer_p1_arm_1_reload_sound                  = rusty_shotgun_reload_sfx;
                        player_arm.enforcer_p1_arm_1_reload_fast_sound             = rusty_shotgun_reload_fast_sfx;
                        ////////////////////////////////////////////////////////////////
                        ////Particles & 'Origin' points
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle             = gunsmoke_puff_particle;
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle_x           = -15;
                        player_arm.enforcer_p1_arm_1_gunsmoke_particle_y           = -6;
                        player_arm.enforcer_p1_arm_1_operate_sound_timing          = 00;
                        player_arm.enforcer_p1_arm_1_reload_particle_timing        = 05;
                        player_arm.enforcer_p1_arm_1_operate_particle              = '';    //Incase if it's magazine/clip fed
                        player_arm.enforcer_p1_arm_1_operate_particle_x            = 0;
                        player_arm.enforcer_p1_arm_1_operate_particle_y            = 0;
                        player_arm.enforcer_p1_arm_1_reload_particle               = shot_brass_particle;
                        player_arm.enforcer_p1_arm_1_reload_particle_x             = -4;
                        player_arm.enforcer_p1_arm_1_reload_particle_y             = -6;
                        ////////////////////////////////////////////////////////////////
                        //////Global var setups
                        player_arm.enforcer_p1_weapon_2_ammo_using                 = 5;
                        global.enforcer_p1_weapon_1_clip                           = 1;
                        player_arm.enforcer_p1_weapon_1_clip                       = global.enforcer_p1_weapon_1_clip;
                        if (global.enforcer_p1_face_side == 'left')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_left_sprite;}
                        if (global.enforcer_p1_face_side == 'rite')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite;}
                        player_arm.enforcer_p1_weapon_1_reload_amount = 1;
                        exit;
                    }///////////////////END FOR RUSTY SHOTGUN/////////////////////////////////////////
            }////////////////////////////////////////////////^^^END OF RIGHT SIDE WEAPON!
        ////////////////////////////////////////
        /////////////////////For left side weapon///////////////////////////////////////////////////////////////
        if(global.enforcer_p1_weapon_2 == true)
            {
                if (global.enforcer_p1_which_weapon_2 == 1)// For rusty revolver
                    {   ///Sprites first
                        player_arm.enforcer_p1_arm_2_hip_idle_left_sprite          = p_1_arm_rusty_revolver_hip_idle_left;
                        player_arm.enforcer_p1_arm_2_hip_idle_rite_sprite          = p_1_arm_rusty_revolver_hip_idle_rite;
                        player_arm.enforcer_p1_arm_2_aim_idle_left_sprite          = p_1_arm_rusty_revolver_aim_idle_left;
                        player_arm.enforcer_p1_arm_2_aim_idle_rite_sprite          = p_1_arm_rusty_revolver_aim_idle_rite;
                        player_arm.enforcer_p1_arm_2_hip_fire_left_sprite          = p_1_arm_rusty_revolver_hip_fire_left;
                        player_arm.enforcer_p1_arm_2_hip_fire_rite_sprite          = p_1_arm_rusty_revolver_hip_fire_rite;
                        player_arm.enforcer_p1_arm_2_aim_fire_left_sprite          = p_1_arm_rusty_revolver_aim_fire_left;
                        player_arm.enforcer_p1_arm_2_aim_fire_rite_sprite          = p_1_arm_rusty_revolver_aim_fire_rite;
                        player_arm.enforcer_p1_arm_2_reload_left_sprite            = p_1_arm_rusty_revolver_reload_left;
                        player_arm.enforcer_p1_arm_2_reload_rite_sprite            = p_1_arm_rusty_revolver_reload_rite;
                        player_arm.enforcer_p1_arm_2_2nd_chance_left_sprite        = p_1_arm_rusty_revolver_2nd_chance_left;
                        player_arm.enforcer_p1_arm_2_2nd_chance_rite_sprite        = p_1_arm_rusty_revolver_2nd_chance_rite;
                        ////////////////////////////////////////////////////////////////
                        ////Sounds & speed Next
                        player_arm.enforcer_p1_arm_2_firing_speed                  = 0.25;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_2_reloading_speed               = 0.5;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_2_gunshot_1                     = rusty_revolver_gunshot_sfx_1;
                        player_arm.enforcer_p1_arm_2_gunshot_2                     = rusty_revolver_gunshot_sfx_2;
                        player_arm.enforcer_p1_arm_2_gunshot_3                     = rusty_revolver_gunshot_sfx_3;
                        player_arm.enforcer_p1_arm_2_operate_sound                 = rusty_revolver_cocking_sfx;  //Lever, Pump, manual cocking sfx
                        player_arm.enforcer_p1_arm_2_reload_sound                  = rusty_revolver_reload_sfx;
                        player_arm.enforcer_p1_arm_2_reload_fast_sound             = rusty_revolver_reload_sfx;
                        ////////////////////////////////////////////////////////////////
                        ////Particles & 'Origin' points
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle             = gunsmoke_puff_particle;
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle_x           = -15;
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle_y           = -6;
                        player_arm.enforcer_p1_arm_2_operate_sound_timing          = 02;
                        player_arm.enforcer_p1_arm_2_reload_particle_timing        = 04;
                        player_arm.enforcer_p1_arm_2_operate_particle              = '';           //Incase if it's magazine/clip fed
                        player_arm.enforcer_p1_arm_2_operate_particle_x            = 0;
                        player_arm.enforcer_p1_arm_2_operate_particle_y            = 0;
                        player_arm.enforcer_p1_arm_2_reload_particle               = small_brass_particle;
                        player_arm.enforcer_p1_arm_2_reload_particle_x             = -5;
                        player_arm.enforcer_p1_arm_2_reload_particle_y             = -3;
                        ////////////////////////////////////////////////////////////////
                        //////Global var setups
                        player_arm.enforcer_p1_weapon_2_ammo_using                 = 1;
                        global.enforcer_p1_weapon_2_clip                           = 5;
                        player_arm.enforcer_p1_weapon_2_clip                       = global.enforcer_p1_weapon_2_clip;
                        if (global.enforcer_p1_face_side == 'left')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_left_sprite;}
                        if (global.enforcer_p1_face_side == 'rite')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite;}
                        player_arm.enforcer_p1_weapon_2_reload_amount = 1;
                        exit;    
                    }///////////////////END FOR RUSTY REVOLVER/////////////////////////////////////////
            //STILL LEFT SIDE!///////////////////////////////////////////////////////////
            if (global.enforcer_p1_which_weapon_2 == 2)// For rusty PISTOL
                {///Sprites first
                        player_arm.enforcer_p1_arm_2_hip_idle_left_sprite          = p_1_arm_rusty_pistol_hip_idle_left;
                        player_arm.enforcer_p1_arm_2_hip_idle_rite_sprite          = p_1_arm_rusty_pistol_hip_idle_rite;
                        player_arm.enforcer_p1_arm_2_aim_idle_left_sprite          = p_1_arm_rusty_pistol_aim_idle_left;
                        player_arm.enforcer_p1_arm_2_aim_idle_rite_sprite          = p_1_arm_rusty_pistol_aim_idle_rite;
                        player_arm.enforcer_p1_arm_2_hip_fire_left_sprite          = p_1_arm_rusty_pistol_hip_fire_left;
                        player_arm.enforcer_p1_arm_2_hip_fire_rite_sprite          = p_1_arm_rusty_pistol_hip_fire_rite;
                        player_arm.enforcer_p1_arm_2_aim_fire_left_sprite          = p_1_arm_rusty_pistol_aim_fire_left;
                        player_arm.enforcer_p1_arm_2_aim_fire_rite_sprite          = p_1_arm_rusty_pistol_aim_fire_rite;
                        player_arm.enforcer_p1_arm_2_reload_left_sprite            = p_1_arm_rusty_pistol_reload_left;
                        player_arm.enforcer_p1_arm_2_reload_rite_sprite            = p_1_arm_rusty_pistol_reload_rite;
                        player_arm.enforcer_p1_arm_2_2nd_chance_left_sprite        = p_1_arm_rusty_pistol_2nd_chance_left;
                        player_arm.enforcer_p1_arm_2_2nd_chance_rite_sprite        = p_1_arm_rusty_pistol_2nd_chance_rite;
                        ////////////////////////////////////////////////////////////////
                        ////Sounds & speed Next
                        player_arm.enforcer_p1_arm_2_firing_speed                  = 0.20;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_2_reloading_speed               = 0.40;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_2_gunshot_1                     = rusty_pistol_gunshot_sfx_1;
                        player_arm.enforcer_p1_arm_2_gunshot_2                     = rusty_pistol_gunshot_sfx_2;
                        player_arm.enforcer_p1_arm_2_gunshot_3                     = rusty_pistol_gunshot_sfx_3;
                        player_arm.enforcer_p1_arm_2_operate_sound                 = blank_audio;  //Lever, Pump, manual cocking sfx
                        player_arm.enforcer_p1_arm_2_reload_sound                  = rusty_pistol_reload_sfx;
                        player_arm.enforcer_p1_arm_2_reload_fast_sound             = rusty_pistol_reload_sfx;
                        ////////////////////////////////////////////////////////////////
                        ////Particles & 'Origin' points
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle             = gunsmoke_puff_particle;
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle_x           = -15;
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle_y           = -6;
                        player_arm.enforcer_p1_arm_2_operate_sound_timing          = 00;
                        player_arm.enforcer_p1_arm_2_reload_particle_timing        = 03;
                        player_arm.enforcer_p1_arm_2_operate_particle              = small_brass_particle;    //Incase if it's magazine/clip fed
                        player_arm.enforcer_p1_arm_2_operate_particle_x            = -5;
                        player_arm.enforcer_p1_arm_2_operate_particle_y            = -3;
                        player_arm.enforcer_p1_arm_2_reload_particle               = '';
                        player_arm.enforcer_p1_arm_2_reload_particle_x             = 0;
                        player_arm.enforcer_p1_arm_2_reload_particle_y             = 0;
                        ////////////////////////////////////////////////////////////////
                        //////Global var setups
                        player_arm.enforcer_p1_weapon_2_ammo_using                 = 2;
                        global.enforcer_p1_weapon_2_clip                           = 5;
                        player_arm.enforcer_p2_weapon_2_clip                       = global.enforcer_p1_weapon_2_clip;
                        if (global.enforcer_p1_face_side == 'left')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_left_sprite;}
                        if (global.enforcer_p1_face_side == 'rite')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite;}
                        player_arm.enforcer_p1_weapon_2_reload_amount = 5;
                        exit;
                    }///////////////////END FOR RUSTY PISTOL/////////////////////////////////////////
                    //STILL LEFT SIDE! SIDE!///////////////////////////////////////////////////////////
                if (global.enforcer_p1_which_weapon_2 == 3)// For rusty REPEATER
                    {
                        ///Sprites first
                        player_arm.enforcer_p1_arm_2_hip_idle_left_sprite          = p_1_arm_rusty_repeater_hip_idle_left;
                        player_arm.enforcer_p1_arm_2_hip_idle_rite_sprite          = p_1_arm_rusty_repeater_hip_idle_rite;
                        player_arm.enforcer_p1_arm_2_aim_idle_left_sprite          = p_1_arm_rusty_repeater_aim_idle_left;
                        player_arm.enforcer_p1_arm_2_aim_idle_rite_sprite          = p_1_arm_rusty_repeater_aim_idle_rite;
                        player_arm.enforcer_p1_arm_2_hip_fire_left_sprite          = p_1_arm_rusty_repeater_hip_fire_left;
                        player_arm.enforcer_p1_arm_2_hip_fire_rite_sprite          = p_1_arm_rusty_repeater_hip_fire_rite;
                        player_arm.enforcer_p1_arm_2_aim_fire_left_sprite          = p_1_arm_rusty_repeater_aim_fire_left;
                        player_arm.enforcer_p1_arm_2_aim_fire_rite_sprite          = p_1_arm_rusty_repeater_aim_fire_rite;
                        player_arm.enforcer_p1_arm_2_reload_left_sprite            = p_1_arm_rusty_repeater_reload_left;
                        player_arm.enforcer_p1_arm_2_reload_rite_sprite            = p_1_arm_rusty_repeater_reload_rite;
                        player_arm.enforcer_p1_arm_2_2nd_chance_left_sprite        = p_1_arm_rusty_repeater_2nd_chance_left;
                        player_arm.enforcer_p1_arm_2_2nd_chance_rite_sprite        = p_1_arm_rusty_repeater_2nd_chance_rite;
                        ////////////////////////////////////////////////////////////////
                        ////Sounds & speed Next
                        player_arm.enforcer_p1_arm_2_firing_speed                  = 0.20;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_2_reloading_speed               = 0.20;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_2_gunshot_1                     = rusty_repeater_gunshot_sfx_1;
                        player_arm.enforcer_p1_arm_2_gunshot_2                     = rusty_repeater_gunshot_sfx_2;
                        player_arm.enforcer_p1_arm_2_gunshot_3                     = rusty_repeater_gunshot_sfx_3;
                        player_arm.enforcer_p1_arm_2_operate_sound                 = rusty_repeater_lever_sfx;  //Lever, Pump, manual cocking sfx
                        player_arm.enforcer_p1_arm_2_reload_sound                  = rusty_repeater_reload_sfx;
                        player_arm.enforcer_p1_arm_2_reload_fast_sound             = rusty_repeater_reload_sfx;
                        ////////////////////////////////////////////////////////////////
                        ////Particles & 'Origin' points
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle             = gunsmoke_puff_particle;
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle_x           = -15;
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle_y           = -6;
                        player_arm.enforcer_p1_arm_2_operate_sound_timing          = 03;
                        player_arm.enforcer_p1_arm_2_reload_particle_timing        = 03;
                        player_arm.enforcer_p1_arm_2_operate_particle              = small_brass_particle;    //Incase if it's magazine/clip fed
                        player_arm.enforcer_p1_arm_2_operate_particle_x            = -5;
                        player_arm.enforcer_p1_arm_2_operate_particle_y            = -3;
                        player_arm.enforcer_p1_arm_2_reload_particle               = '';
                        player_arm.enforcer_p1_arm_2_reload_particle_x             = 0;
                        player_arm.enforcer_p1_arm_2_reload_particle_y             = 0;
                        ////////////////////////////////////////////////////////////////
                        //////Global var setups
                        player_arm.enforcer_p1_weapon_2_ammo_using                 = 3;
                        global.enforcer_p1_weapon_2_clip                           = 4;
                        player_arm.enforcer_p1_weapon_2_clip                       = global.enforcer_p1_weapon_2_clip;
                        if (global.enforcer_p1_face_side == 'left')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_left_sprite;}
                        if (global.enforcer_p1_face_side == 'rite')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite;}
                        player_arm.enforcer_p1_weapon_2_reload_amount = 1;
                        exit;
                    }///////////////////END FOR RUSTY REPEATER/////////////////////////////////////////
            if (global.enforcer_p1_which_weapon_2 == 4)// For rusty RIFLE
                    {
                        ///Sprites first
                        player_arm.enforcer_p1_arm_2_hip_idle_left_sprite          = p_1_arm_rusty_rifle_hip_idle_left;
                        player_arm.enforcer_p1_arm_2_hip_idle_rite_sprite          = p_1_arm_rusty_rifle_hip_idle_rite;
                        player_arm.enforcer_p1_arm_2_aim_idle_left_sprite          = p_1_arm_rusty_rifle_aim_idle_left;
                        player_arm.enforcer_p1_arm_2_aim_idle_rite_sprite          = p_1_arm_rusty_rifle_aim_idle_rite;
                        player_arm.enforcer_p1_arm_2_hip_fire_left_sprite          = p_1_arm_rusty_rifle_hip_fire_left;
                        player_arm.enforcer_p1_arm_2_hip_fire_rite_sprite          = p_1_arm_rusty_rifle_hip_fire_rite;
                        player_arm.enforcer_p1_arm_2_aim_fire_left_sprite          = p_1_arm_rusty_rifle_aim_fire_left;
                        player_arm.enforcer_p1_arm_2_aim_fire_rite_sprite          = p_1_arm_rusty_rifle_aim_fire_rite;
                        player_arm.enforcer_p1_arm_2_reload_left_sprite            = p_1_arm_rusty_rifle_reload_left;
                        player_arm.enforcer_p1_arm_2_reload_rite_sprite            = p_1_arm_rusty_rifle_reload_rite;
                        player_arm.enforcer_p1_arm_2_2nd_chance_left_sprite        = p_1_arm_rusty_rifle_2nd_chance_left;
                        player_arm.enforcer_p1_arm_2_2nd_chance_rite_sprite        = p_1_arm_rusty_rifle_2nd_chance_rite;
                        ////////////////////////////////////////////////////////////////
                        ////Sounds & speed Next
                        player_arm.enforcer_p1_arm_2_firing_speed                  = 0.20;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_2_reloading_speed               = 0.20;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_2_gunshot_1                     = rusty_rifle_gunshot_sfx_1;
                        player_arm.enforcer_p1_arm_2_gunshot_2                     = rusty_rifle_gunshot_sfx_2;
                        player_arm.enforcer_p1_arm_2_gunshot_3                     = rusty_rifle_gunshot_sfx_3;
                        player_arm.enforcer_p1_arm_2_operate_sound                 = blank_audio;  //Lever, Pump, manual cocking sfx
                        player_arm.enforcer_p1_arm_2_reload_sound                  = rusty_rifle_reload_sfx;
                        player_arm.enforcer_p1_arm_2_reload_fast_sound             = rusty_rifle_reload_fast_sfx;
                        ////////////////////////////////////////////////////////////////
                        ////Particles & 'Origin' points
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle             = gunsmoke_puff_particle;
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle_x           = -15;
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle_y           = -6;
                        player_arm.enforcer_p1_arm_2_operate_sound_timing          = 00;
                        player_arm.enforcer_p1_arm_2_reload_particle_timing        = 05;
                        player_arm.enforcer_p1_arm_2_operate_particle              = '';    //Incase if it's magazine/clip fed
                        player_arm.enforcer_p1_arm_2_operate_particle_x            = 0;
                        player_arm.enforcer_p1_arm_2_operate_particle_y            = 0;
                        player_arm.enforcer_p1_arm_2_reload_particle               = large_brass_particle;
                        player_arm.enforcer_p1_arm_2_reload_particle_x             = -3;
                        player_arm.enforcer_p1_arm_2_reload_particle_y             = -4;
                        ////////////////////////////////////////////////////////////////
                        //////Global var setups
                        player_arm.enforcer_p1_weapon_2_ammo_using                 = 4;
                        global.enforcer_p1_weapon_2_clip                           = 1;
                        player_arm.enforcer_p1_weapon_2_clip                       = global.enforcer_p1_weapon_2_clip;
                        if (global.enforcer_p1_face_side == 'left')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_left_sprite;}
                        if (global.enforcer_p1_face_side == 'rite')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite;}
                        player_arm.enforcer_p1_weapon_2_reload_amount = 1;
                        exit;
                    }///////////////////END FOR RUSTY RIFLE/////////////////////////////////////////
            if (global.enforcer_p1_which_weapon_2 == 5)// For rusty SHOTGUN
                    {
                        ///Sprites first
                        player_arm.enforcer_p1_arm_2_hip_idle_left_sprite          = p_1_arm_rusty_shotgun_hip_idle_left;
                        player_arm.enforcer_p1_arm_2_hip_idle_rite_sprite          = p_1_arm_rusty_shotgun_hip_idle_rite;
                        player_arm.enforcer_p1_arm_2_aim_idle_left_sprite          = p_1_arm_rusty_shotgun_aim_idle_left;
                        player_arm.enforcer_p1_arm_2_aim_idle_rite_sprite          = p_1_arm_rusty_shotgun_aim_idle_rite;
                        player_arm.enforcer_p1_arm_2_hip_fire_left_sprite          = p_1_arm_rusty_shotgun_hip_fire_left;
                        player_arm.enforcer_p1_arm_2_hip_fire_rite_sprite          = p_1_arm_rusty_shotgun_hip_fire_rite;
                        player_arm.enforcer_p1_arm_2_aim_fire_left_sprite          = p_1_arm_rusty_shotgun_aim_fire_left;
                        player_arm.enforcer_p1_arm_2_aim_fire_rite_sprite          = p_1_arm_rusty_shotgun_aim_fire_rite;
                        player_arm.enforcer_p1_arm_2_reload_left_sprite            = p_1_arm_rusty_shotgun_reload_left;
                        player_arm.enforcer_p1_arm_2_reload_rite_sprite            = p_1_arm_rusty_shotgun_reload_rite;
                        player_arm.enforcer_p1_arm_2_2nd_chance_left_sprite        = p_1_arm_rusty_shotgun_2nd_chance_left;
                        player_arm.enforcer_p1_arm_2_2nd_chance_rite_sprite        = p_1_arm_rusty_shotgun_2nd_chance_rite;
                        ////////////////////////////////////////////////////////////////
                        ////Sounds & speed Next
                        player_arm.enforcer_p1_arm_2_firing_speed                  = 0.20;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_2_reloading_speed               = 0.20;    //This will affect the arm sprite speed.
                        player_arm.enforcer_p1_arm_2_gunshot_1                     = rusty_shotgun_gunshot_sfx_1;
                        player_arm.enforcer_p1_arm_2_gunshot_2                     = rusty_shotgun_gunshot_sfx_2;
                        player_arm.enforcer_p1_arm_2_gunshot_3                     = rusty_shotgun_gunshot_sfx_3;
                        player_arm.enforcer_p1_arm_2_operate_sound                 = blank_audio;  //Lever, Pump, manual cocking sfx
                        player_arm.enforcer_p1_arm_2_reload_sound                  = rusty_shotgun_reload_sfx;
                        player_arm.enforcer_p1_arm_2_reload_fast_sound             = rusty_shotgun_reload_fast_sfx;
                        ////////////////////////////////////////////////////////////////
                        ////Particles & 'Origin' points
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle             = gunsmoke_puff_particle;
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle_x           = -15;
                        player_arm.enforcer_p1_arm_2_gunsmoke_particle_y           = -6;
                        player_arm.enforcer_p1_arm_2_operate_sound_timing          = 00;
                        player_arm.enforcer_p1_arm_2_reload_particle_timing        = 05;
                        player_arm.enforcer_p1_arm_2_operate_particle              = '';    //Incase if it's magazine/clip fed
                        player_arm.enforcer_p1_arm_2_operate_particle_x            = 0;
                        player_arm.enforcer_p1_arm_2_operate_particle_y            = 0;
                        player_arm.enforcer_p1_arm_2_reload_particle               = shot_brass_particle;
                        player_arm.enforcer_p1_arm_2_reload_particle_x             = -4;
                        player_arm.enforcer_p1_arm_2_reload_particle_y             = -6;
                        ////////////////////////////////////////////////////////////////
                        //////Global var setups
                        player_arm.enforcer_p1_weapon_2_ammo_using                 = 5;
                        global.enforcer_p1_weapon_2_clip                           = 1;
                        player_arm.enforcer_p1_weapon_2_clip                       = global.enforcer_p1_weapon_2_clip;
                        if (global.enforcer_p1_face_side == 'left')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_left_sprite;}
                        if (global.enforcer_p1_face_side == 'rite')
                            {player_arm.enforcer_p1_arm_current_sprite_draw = player_arm.enforcer_p1_arm_1_hip_idle_rite_sprite;}
                        player_arm.enforcer_p1_weapon_2_reload_amount = 1;
                        exit;
                    }///////////////////END FOR RUSTY SHOTGUN/////////////////////////////////////////
                }
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        exit;
    }
///End P1's arms populating
